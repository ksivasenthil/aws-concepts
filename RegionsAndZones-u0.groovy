g.V('Regions').property(list, 'key-phrases','Each region is a seperate / isolated geographic area')
g.V('Regions').property(list, 'key-phrases','No automatic replication of EC2 resources across regions')
g.V('Regions').property(list, 'key-phrases','Charge for intra-region data transfer')
g.V('Regions').property(list, 'key-phrases','For regions introduced after March 20, 2019 account administrator needs to enable the region in Console explicitly')
g.V('Regions').property(list, 'key-phrases','{ "available": [ { "id": "us-east-2", "name": "US East (Ohio)" }, { "id": "us-east-1", "name": "US East (N.Virginia)" }, { "id": "us-west-1", "name": "US West (N.California)" }, { "id": "us-west-2", "name": "US West (Oregon)" }, { "id": "af-south-1", "name": "Afirca (Cape Town)", "opt-in": "required" }, { "id": "ap-east-1", "name": "Asia Pacific (Hong Kong)" }, { "id": "ap-south-1", "name": "Asia Pacific (Mumbai)" }, { "id": "ap-northeast-1", "name": "Asia Pacific (Tokyo)" }, { "id": "ap-northeast-2", "name": "Asia Pacific (Seoul)" }, { "id": "ap-northeast-3", "name": "Asia Pacific (Osaka-Local)" }, { "id": "ap-southeast-1", "name": "Asia Pacific (Singapore)" }, { "id": "ap-southeast-2", "name": "Asia Pacific (Sydney)" }, { "id": "ca-central-1", "name": "Canada (Central)" }, { "id": "eu-central-1", "name": "Europe (Frankfurt)" }, { "id": "eu-west-1", "name": "Eurpoe (Ireland)" }, { "id": "eu-west-2", "name": "Europe (London)" }, { "id": "eu-south-1", "name": "Europe (Milan)", "opt-in": "required" }, { "id": "eu-west-3", "name": "Europe (Paris)" }, { "id": "eu-north-1", "name": "Europe (Stockholm)" }, { "id": "me-south-1", "name": "Middle East (Bahrain)", "opt-in": "required" }, { "id": "sa-east-1", "name": "South America (Sao Paulo)" } ] }')
g.V('AMI').addE('HAS_FEATURE').to(g.V('Regions'))
g.V('Regions').addE('CONTAINS').to(g.V('AvailabilityZone'))
g.V('AvailabilityZone').property(list,'key-phrases','Varies per region for an AWS Account')
g.V('AvailabilityZone').property(list,'key-phrases','Use AWS Console or CLI tool to determine the available AvailabilityZone')
g.addV('concept').property('id','LocalZone').property('name', 'LocalZone').property('key-phrases', 'Geographically closer to user').property('key-phrases', 'Have their own internet connections').property('key-phrases', 'Supports AWS Direct Connect')
g.V('Regions').addE('LOCALIZES').to(g.V('LocalZone'))
g.V('LocalZone').addE('CONTRIBUTES_LOWER_LATENCY').to(g.V('EC2'))
g.addV('concept').property('id','WavelengthZone').property('name', 'WavelengthZone').property('key-phrases', 'Deploys to edge of telecommunication carriers 5G networks').property('key-phrases', 'Isolated zone in a telecommunication carrier location where wavelength infrastructure is deployed').property('key-phrases', 'Tied to a Region').property('key-phrases', 'Managed by the control plane in Region').property('key-phrases', 'Identified by region code followed by zone identifier e.g. us-east-1-wl1-ab-wlz-1')
g.V('Regions').addE('CONTAINS').to(g.V('WavelengthZone'))
g.V('WavelengthZone').addE('CONTRIBUTES_LOWER_LATENCY').to(g.V('EC2')).property('notes','Lowers the latency for mobile applications by 10^-6 factor')
g.addV('governance-management').property('id', 'Outpost').property('name', 'AWS Outpost').property('key-phrases','Fully managed service').property('key-phrases','Offers AWS infrastructure, services APIs, and tools to virtually any data-center, co-location space or on-premises facility').property('key-phrases','Offers hybrid cloud experience')
g.V('Regions').addE('CONTRIBUTES_FAULT_TOLERANCE').to(g.V('EC2'))
g.V('Regions').addE('CONTRIBUTES_STABILITY').to(g.V('EC2'))
g.addV('concept').property('id','Account').property('name','AWS Account').property('key-phrases','Main organization (administrative and billing) entity in AWS cloud')
g.V('Account').addE('HAS_MANY').to(g.V('Regions'))
g.addV('special').property('id','GovCloud').property('name','AWS GovCloud').property('key-phrases','Specialized regions for use by US government').property('key-phrases', 'US-West has only one region - AWS GovCloud(US-West). Different from us-west-*').property('key-phrases','US-East has only one region AWS GovCloud(US-East). Different from us-east-*')
g.addV('special').property('id','ChinaCloud').property('name', 'Amazon AWS China').property('key-phrases', 'Specialized regions for use in China country only.').property('key-phrases','Beijing and Ningxia are the only two regions')
g.V('Regions').addE('SPECIALIZES').to(g.V('GovCloud'))
g.V('Regions').addE('SPECIALIZES').to(g.V('ChinaCloud'))