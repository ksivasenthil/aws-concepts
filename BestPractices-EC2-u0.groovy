g.V('IAM').property(list, 'best-practices', 'Use to manage access to API\'s and AWS resources using IAM users and roles both.')
g.V('IAM').property(list, 'best-practices', 'Establish credential management policies and procedures for creating, distributing, rotating and revoking AWS access credentials.')
g.V('SecurityGroup').property(list, 'best-practices', 'Implement least permissive rules for the security group.')
g.V('Instance').property(list, 'best-practices', 'Regularly patch, update and secure operating system and applications on the instance')
g.V('Instance').property(list, 'best-practices', 'Use instance custom metadata to track and identify EC2 instances.')
g.V('Instance').property(list, 'best-practices', 'Save the configuration of instance as AMI for launching future instances')
g.V('Instance').property(list, 'best-practices', 'Design application to handle dynamic IP addressing when instance restarts.')
g.V('Instance').property(list, 'best-practices', 'Set TTL for the instance to 255, for both IPv4 and IPv6 interfaces. Lower value could potentially cause data to be lost in transit, causing reachability issues.')
g.V('Instance').addE('USES').to(g.V('Tag')).property('notes', 'Used to track and identify EC2 instances')
g.V('RDV').property(list, 'best-practices', 'Understand well the choice of RDV impacts - data persistence, backup and recovery options')
g.V('EBS').property(list, 'best-practices', 'Ensure seperate EBS is used for OS and individual data')
g.V('EBSV').property(list, 'best-practices', 'Encrypt EBS volumes and snapshots')
g.V('EBSV').property(list, 'best-practices', 'Ensure EBS used for individual data is persisted even after instance termination')
g.V('EBSV').property(list, 'best-practices', 'Ensure EBS volumes are recommended for regular back up in a schedule')
g.V('EBSV').property(list, 'best-practices', 'Regularly test the process of recovering from a failure of volume.')
g.addV('concept').property('id', 'EBSS').property('name', 'EBS Snapshots').property(list, 'key-phrases', 'Incremental backups')
g.V('EBSS').property(list, 'best-practices', 'Encrypt EBS volumes and snapshots')
g.V('EBSV').addE('USES').to(g.V('EBSS')).property(single, 'notes', 'Used to take incremental backup')
g.V('ISV').property(list, 'best-practices', 'Use only to store temporary data')
g.V('ISV').property(list, 'best-practices', 'Remember data is deleted when the associated Instance is stopped, hibernated or terminated.')
g.V('ISV').property(list, 'best-practices', 'If used for database storage, use database cluster with replication factor to ensure fault tolerance.')
g.V('EC2').property(list, 'best-practices', 'View your current limits on Amazon EC2 and plan well to request for any limit increase')
g.V('EC2').property(list, 'best-practices', 'Deploy critical components of application workload across multiple Availability Zones and replicate data appropriately.')
g.V('EC2').property(list, 'best-practices', 'Use EC2 auto scaling for failovers.')
g.addV('compute').property('id', 'EC2AS').property('name', 'Amazon EC2 Auto Scaling').property(list, 'key-phrases', 'Ensures you have correct number of EC2 instances to handle the load for your application.')
g.V('EC2').addE('HAS_FEATURE').to(g.V('EC2AS'))
g.V('EC2').addE('CONTRIBUTES_RESILIENCY').to(g.V('EC2AS'))
g.V('EC2').addE('CONTRIBUTES_FAULT_TOLERANCE').to(g.V('EC2AS'))